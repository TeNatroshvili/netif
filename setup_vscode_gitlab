- GitLab Workflow Extension hinzufügen (2te von oben wenn man nach GitLab sucht)
- gitlab.htlstp.ac.at im Browser öffnen und einloggen.
- Im Projekt NETIF auf Clone klicken
- Visual Studio Code (HTTPS) auswählen.
- Speicherort am PC auswählen
- Loginfenster taucht auf und dann einloggen
- In der GitLab Website rechts oben auf deinen Avatar klicken
- Preferences auswählen
- Access Token auswählen
- Bei Token Name Visual Studi Code reinschreiben
- Expiration Date entfernen
- api ankreuzen
- Create klicken
- Token kopieren!!! danach nicht mehr sichtbar
- GitLab Workflow symbol auf linken seite
- Add Acount
- in oberen Zeile statt gitlab.com - gitlab.htlstp.ac.at hinschreiben
- dann Enter und deinen zuvor erstellten Token eingeben.
- Terminal in VSCode öffnen
- "python -m venv .venv" ausführen
- "./.venv/Scripts/activate"
- "python.exe -m pip install --upgrade pip"
- "pip install flask"
- Comitten und lets goo
----
- wenn ein error kommt, dass das laden von scrips disabled ist
- powershell im admin aufmachen
- "Set-ExecutionPolicy -ExecutionPolicy RemoteSigned" ausführen
- "A" eingeben wenn gefragg wird
----------------
pip install scrapy
pip install selenium
pip install -U flask-cors
pip install "pymongo[srv]"
pip install requests
pip install lxml
------------------
Installieren eines Google Chrome Drivers hinsichtlich der Verwendung des Seleniums
1. Zuerst die Version der Chrome herausfinden
1.1 Chrome starten
1.2 bei den 3 Punkten (rechts oben) clicken
1.3 Optionen von "Hilfe" anzeigem
1.4 Über Google Chrome
1.5 dann sieht man die Versionsnummer
2   richtige Version von chrome.exe driver herunterladen 
2.1 die Einleitung in https://chromedriver.chromium.org/downloads/version-selection folgen

3.0    ----- Selenium bezüglich des Dockers
            - man braucht Chrome Brwoser und Chromedriver beide installiert
                - Democode für die Installaion von Chrome Brwoser
                    RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
                    RUN echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
                    RUN apt-get update -y
                    RUN apt-get install -y google-chrome-stable 
                - Democode für die Installaion von ChromeDriver
                    RUN CHROMEDRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE` && \
                        wget -q --continue -P /tmp "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip" && \
                        unzip /tmp/chromedriver_linux64.zip -d /usr/local/bin/

            - bei der Verwendung von Chrome muss man auf Pfad achten
                z.B. driver = webdriver.Chrome('/usr/local/bin/chromedriver')
            - man muss vllt. umstellen, um sandbox zu deaktivieren
                - Democode
                    options = webdriver.ChromeOptions()
                    options.add_argument('--no-sandbox')
                    driver = webdriver.Chrome('/usr/local/bin/chromedriver', options=options)

